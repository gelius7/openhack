# check account
az account list
az account show -o json

# install sql
docker pull mcr.microsoft.com/mssql/server:2017-latest

# create docker network for openhack
docker network create openhack

docker run --network openhack -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Skt200616" \
   -p 1433:1433 --name sql1 \
   -d \
   mcr.microsoft.com/mssql/server:2017-latest

# run sql for test
docker exec -it sql1 "bash"

# insatll sqlcmd
brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release
brew update
HOMEBREW_NO_ENV_FILTERING=1 ACCEPT_EULA=y brew install mssql-tools

# connect to localhost sql
sqlcmd -S localhost -U SA -P "Skt200616"

# create database mydrivingDB (beflow is sqlcmd)
CREATE DATABASE mydrivingDB
GO
select name from sys.databases
GO

# input data to sql
docker run --network openhack -e SQLFQDN=sql1 -e SQLUSER=SA -e SQLPASS=Skt200616 -e SQLDB=mydrivingDB openhack/data-load:v1

### build poi application
cd ./src/poi
docker build --no-cache --build-arg IMAGE_VERSION="1.0" --build-arg IMAGE_CREATE_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" --build-arg IMAGE_SOURCE_REVISION="`git rev-parse HEAD`" -f ../../dockerfiles/Dockerfile_3 -t "registrybnt1510.azurecr.io/tripinsights/poi:1.0" .

# userprofile
docker build --no-cache --build-arg IMAGE_VERSION="1.0" --build-arg IMAGE_CREATE_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" --build-arg IMAGE_SOURCE_REVISION="`git rev-parse HEAD`" -f ../../dockerfiles/Dockerfile_2 -t "registrybnt1510.azurecr.io/tripinsights/userprofile:1.0" .

# user-java
docker build --no-cache --build-arg IMAGE_VERSION="1.0" --build-arg IMAGE_CREATE_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" --build-arg IMAGE_SOURCE_REVISION="`git rev-parse HEAD`" -f ../../dockerfiles/Dockerfile_0 -t "registrybnt1510.azurecr.io/tripinsights/user-java:1.0" .


# run poi application
docker run -d -p 8080:80 --network openhack --name poi -e "SQL_USER=SA" -e "SQL_DBNAME=mydrivingDB" -e "SQL_PASSWORD=Skt200616" -e "SQL_SERVER=sql1" -e "ASPNETCORE_ENVIRONMENT=Local" tripinsights/poi:1.0

# send http apis for test
curl -i -X GET 'http://localhost:8080/api/poi'
curl -i -X GET 'http://localhost:8080/api/poi/264ffaa3-1fe8-4fb0-a4fb-63bdbc9999ae'
curl -i -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ "tripId": "ea2f7ae0-3cef-49cb-b7d1-ce972113120c", "latitude": 47.39026323526123, "longitude": -123.23165568111123, "poiType": 2, "timestamp": "2019-07-12T02:30:03.351Z", "deleted": false }' 'http://localhost:8080/api/poi'
curl -i -X GET 'http://localhost:8080/api/poi/healthcheck'
